File    = table
Product = @product@
#*************************************************
# Starting Group definition
Group:
Flavor     = ANY
Qualifiers = ""
  Action = setup
       prodDir()
       exeActionRequired("setup__")

Flavor     = NULL
Qualifiers = "@qualifier@"
  Action = setup
       prodDir()
       ## we aren't putting anything in a noarch subdirectory, but we keep this in case we need it later
       ##fileTest( ${UPS_PROD_DIR}/noarch.@qualifier@, -d, "${UPS_PROD_DIR}/noarch.@qualifier@ directory not found: SETUP ABORTED")
       envSet( ${UPS_PROD_NAME_UC}_FQ, noarch.@qualifier@ )
       exeActionRequired("setup__")

Common:
  Action = setup__
    setupEnv()
    envSet(${UPS_PROD_NAME_UC}_VERSION, @version@)
    prodDir( _FQ_DIR, ${${UPS_PROD_NAME_UC}_FQ} )

    # define PROD_DIR_INC if there is an appropriate include subdirectory
    if    ( sh -c 'for dd in ${${UPS_PROD_NAME_UC}_FQ}/include include;do [ -d ${UPS_PROD_DIR}/$dd ] && exit;done;exit 1' )
        prodDir( _INC, ""`sh -c 'for dd in ${${UPS_PROD_NAME_UC}_FQ}/include include;do [ -d ${UPS_PROD_DIR}/$dd ] && echo $dd && exit;done;echo .'`"" )
    else ()
	execute( true, NO_UPS_ENV )
    endif ( sh -c 'for dd in ${${UPS_PROD_NAME_UC}_FQ}/include include;do [ -d ${UPS_PROD_DIR}/$dd ] && exit;done;exit 1' )

    # define PROD_DIR_LIB if there is an appropriate lib subdirectory
    if    ( sh -c 'for dd in ${${UPS_PROD_NAME_UC}_FQ}/lib lib;do [ -d ${UPS_PROD_DIR}/$dd ] && exit;done;exit 1' )
        prodDir( _LIB, ""`sh -c 'for dd in ${${UPS_PROD_NAME_UC}_FQ}/lib lib;do [ -d ${UPS_PROD_DIR}/$dd ] && echo $dd && exit;done;echo .'`"" )
        pathAppend(LD_LIBRARY_PATH, ${${UPS_PROD_NAME_UC}_LIB})
    else ()
	execute( true, NO_UPS_ENV )
    endif ( sh -c 'for dd in ${${UPS_PROD_NAME_UC}_FQ}/lib lib;do [ -d ${UPS_PROD_DIR}/$dd ] && exit;done;exit 1' )

    # add the bin directory to the path
    pathPrepend(PATH, ${UPS_PROD_DIR}/bin )

End:
# End Group definition
#*************************************************
