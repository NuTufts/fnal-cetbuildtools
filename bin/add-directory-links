#!/bin/bash
#
# This script creates symbolic links so a Scientific Linux Fermi build can be used 
# used on a Scientific Linux or Scientific Linux CERN machine.
# CAVEAT EMPTOR:  We do not guarantee binary compatibility
#
# This script must be called with the full path to the top of your externals directory:

EXTERNALS=${1}

echo ""
echo "DISCLAIMER: this script creates symbolic links so you can"
echo "            use a Scientific Linux Fermi build on your machine."
echo "            WE DO NOT GUARANTEE BINARY COMPATIBILITY"
echo "            USE AT YOUR OWN RISK"
echo ""

if [ -z ${EXTERNALS} ]
then
   echo "USAGE: `basename ${0}` <product-directory>"
   exit 1
fi

cd ${EXTERNALS}

source ${EXTERNALS}/setup
OS1=`uname`
plat=`uname -p`
if [ ${OS1} = "Darwin" ]
then
    flvr=`ups flavor -2`
else
    flvr=`ups flavor`
fi

if [ -z ${flvr} ]
then
   echo "ERROR: could not determine flavor for this platform"
   echo "       something is very wrong"
   exit 1
fi

if [ ${OS1} = "Darwin" ]
then
   OSnum=`uname -r | cut -f1 -d"."`
   OS=${OS1}${OSnum}
   subdir=d${OSnum}.${plat}
elif [ "${flvr0}" = "Linuxppc" ]
then
   OS=slf5
   subdir=${OS}.${plat}
else
   OSnum=`lsb_release -r | cut -f2 | cut -f1 -d"."`
   OS=${OS1}${OSnum}
   subdir=${OS1}${OSnum}.${plat}
   if [ `lsb_release -d | cut  -f3 -d" "` = "SLF" ]
   then
      OS=slf${OSnum}
      subdir=slf${OSnum}.${plat}
   fi
   if [ `lsb_release -d | cut  -f4 -d" "` = "SLC" ]
   then
      OS=slc${OSnum}
      subdir=slc${OSnum}.${plat}
   fi
   if [ `lsb_release -d | cut  -f4 -d" "` = "LTS" ]
   then
      OS=slf${OSnum}
      subdir=slf${OSnum}.${plat}
   fi
fi

slfsubdir=slf${OSnum}.${plat}

if [ ${subdir} != ${slfsubdir} ]
then
   list=`find ${EXTERNALS}/art ${EXTERNALS}/cetlib ${EXTERNALS}/cpp0x ${EXTERNALS}/fhiclcpp ${EXTERNALS}/messagefacility -name "${slfsubdir}*" -print`
   for dir in ${list}
   do
      if [ -d ${dir} ]
      then
         dname=`basename ${dir}`
         oneup=`dirname ${dir}`
         newdir=`echo ${dname} | sed -e s%${slfsubdir}%${subdir}%`
         #echo "found ${dir} at ${oneup}"
         if [ -e ${oneup}/${newdir} ]
         then
            echo "already have ${oneup}/${newdir}"
         else
            echo "executing cd ${oneup}; ln -s ${dname} ${newdir}"
            cd ${oneup}; ln -s ${dname} ${newdir}
         fi
      fi
   done
fi

exit 0
