#!/bin/env perl
#
# setup products for the build environment
# use product_deps and qualifier_deps

# we need to know the qualifiers
# -d, -o, or -p and 1-2 other qualifiers

# cetbuildtools must already be setup by setup_for_development
# create a temporary file and return the temporary file name for use by setup_for_development

use File::Basename;
use lib dirname($0);

if( $#ARGV < 2 ) {
    print "\n";
    print "ERROR: directory and qualifiers not specified\n";
    print "USAGE: basename($0) <input-directory> <-d|-o|-p> <qualifiers> \n";
    print "\n";
    exit 1;
}

$inputdir = $ARGV[0];
for $i ( 1 .. $#ARGV ) {
    if( $ARGV[$i] eq "-d" ) {
      $dop = "debug";
    } elsif( $ARGV[$i] eq "-o" ) {
      $dop = "opt";
    } elsif( $ARGV[$i] eq "-p" ) {
      $dop = "prof";
    } else {
      $qual = $qual.$ARGV[$i].":";
    }
}
$qual = $qual.$dop;

require parse_deps;

$pfile=$inputdir."/product_deps";
$qfile=$inputdir."/qualifier_deps";

($product, $version, %phash) = parse_product_list( $pfile );
($ndeps, @qlist) = parse_qualifier_list( $product, $version, $qfile );

($product, $version, %phash) = parse_product_list( $pfile );
($ndeps, @qlist) = parse_qualifier_list( $product, $version, $qfile );

print "setup products needed to build $product $version -q $qual\n";

$match = 0;
$tmpfl = "/tmp/".$product.$version.$qual;
open(TSET, "> $tmpfl") or die "Couldn't open $tmpfl";
foreach $i ( 1 .. $#qlist ) {
  if ( $qlist[$i][0] eq $qual ) {
    $match++;
    foreach $j ( 1 .. $ndeps ) {
      if ( $qlist[$i][$j] eq "-" ) {
      } elsif ( $qlist[$i][$j] eq "-nq-" ) {
	print TSET "    setup -B $qlist[0][$j] $phash{$qlist[0][$j]} \n";
      } elsif ( $qlist[$i][$j] eq "-b-" ) {
	print TSET "    setup -B $qlist[0][$j] $phash{$qlist[0][$j]} \n";
      } else {
	@qwords = split(/:/,$qlist[$i][$j]);
	$ql="+".$qwords[0];
	foreach $j ( 1 .. $#qwords ) {
	  $ql = $ql.":+".$qwords[$j];
	}
	print TSET "    setup -B $qlist[0][$j] $phash{$qlist[0][$j]} -q $ql \n";
      }
    }
  }
}
close(TSET);
if ( $match = 0 ) {
   print "ERROR: failed to find a match for $product $version -q $qual\n";
}
system( "cat $tmpfl" );

exit 0;
